name: Build MechWild QMK firmware
on: [push, workflow_dispatch]
# NOTE: workflow_dispatch is only available for the default branch, SIGH ("https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow#configuring-a-workflow-to-run-manually")

permissions: {}

jobs:
  build:
    if: github.event.sender.login == 'kylemccreery'
    runs-on: ubuntu-latest
    container: qmkfm/qmk_cli
    strategy:
      fail-fast: false
      # TODO: break the matrix construction out into its own job, zmk-style?
      matrix:
        keyboard: [bde/rev2, bde/lefty, bde/righty, mercutio, mokulua/standard, mokulua/mirrored, murphpad, obe/f401, obe/f411, obe/f401/eeprom, obe/f411/eeprom, puckbuddy, sugarglider/wide_oled/f401, sugarglider/wide_oled/f411, sugarglider/f401, sugarglider/f411, trisk, waka60/f401, waka60/f401/eeprom, waka60/f411, waka60/f411/eeprom]
        keymap: [default, via, vial]
        include:
          - keyboard: bde/lefty
            keymap: fancy
          - keyboard: mercutio
            keymap: bongocat
          - keyboard: mercutio
            keymap: fancy
          - keyboard: waka60/f401
            keymap: audio
          - keyboard: waka60/f401/eeprom
            keymap: audio
          - keyboard: waka60/f411
            keymap: audio
          - keyboard: waka60/f411/eeprom
            keymap: audio
    steps:
      - name: Generate token
        uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Set output variables for later job steps
        id: vars
        run: |
          echo cache-mw-qmk-hash=$(git -c 'versionsort.suffix=' ls-remote --exit-code --sort='-version:refname' --tags --refs https://github.com/MechWild/qmk_firmware.git experimental_firmware '*.*.*' | grep -P 'refs/tags/\d+\.\d+\.\d+' | head -n1 | cut -f1) >> $GITHUB_OUTPUT
          echo cache-qmk-hash=$(git -c 'versionsort.suffix=' ls-remote --exit-code --sort='-version:refname' --tags --refs https://github.com/qmk/qmk_firmware.git master '*.*.*' | grep -P 'refs/tags/\d+\.\d+\.\d+' | head -n1 | cut -f1) >> $GITHUB_OUTPUT
          echo keyboard-filename=$(echo ${{ matrix.keyboard }} | tr '/' '_') >> $GITHUB_OUTPUT

      - name: Cache repos
        id: cache-repos
        uses: actions/cache@v3
        with:
          # TODO: Is a better key possible without cloning the repo? Vial doesn't tag...
          key: ${{ steps.vars.outputs.cache-qmk-hash }}
          path: |
            qmk_firmware
            vial-qmk
            
      - name: Checkout QMK
        uses: actions/checkout@v3
        if: ${{ ! steps.cache-repos.outputs.cache-hit || matrix.keymap != 'vial' }}
        with:
          repository: mechwild/qmk_firmware
          ref: experimental_firmware
          submodules: recursive
          path: qmk_firmware
          token: ${{ steps.generate-token.outputs.token }}

      - name: Merge and push into build branch
        if: ${{ matrix.keymap != 'vial' && steps.vars.outputs.cache-mw-qmk-hash != steps.vars.outputs.cache-qmk-hash }}
        env: 
          UPSTREAM: https://github.com/qmk/qmk_firmware.git
        run: |
          cd qmk_firmware
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git remote add upstream $UPSTREAM
          echo "Fetching upstream master including tags"
          git fetch --tags upstream master
          echo "Pulling upstream master including tags"
          git pull --tags --no-edit -X ours upstream master --allow-unrelated-histories
          git push --tags
          
      - name: Attempting fetch/pull after failure to update here
        if: ${{ failure() }}
        run: |
          cd qmk_firmware
          git fetch
          git pull

      - name: Checkout Vial
#        if: ${{ ! steps.cache-repos.outputs.cache-hit || matrix.keymap == 'vial' }}
        uses: actions/checkout@v3
        with:
          repository: mechwild/vial-qmk
          ref: experimental_firmware
          submodules: recursive
          path: vial-qmk


      - name: Build QMK firmware
      # Seems unnecessary to specify on whether it is vial keymap or not, just remove vial from keymap array and hardcode it in the vial build command
        if: ${{ matrix.keymap != 'vial' }}
        run: make -C qmk_firmware mechwild/${{ matrix.keyboard }}:${{ matrix.keymap }} -j$(nproc)

      - name: Build Vial firmware
        if: ${{ matrix.keymap == 'vial' }}
        run: make -C vial-qmk make mechwild/${{ matrix.keyboard }}:${{ matrix.keymap }} -j$(nproc)

      - name: Move keymaps
        # If the keymaps aren't (re)moved, they'll end up archived with the repos!
        run: |
          mkdir ${{ steps.vars.outputs.keyboard-filename }} && mv */mechwild_${{ steps.vars.outputs.keyboard-filename }}_${{ matrix.keymap }}.* ${{ steps.vars.outputs.keyboard-filename }}
      - name: Zip firmware
        uses: actions/upload-artifact@v3
        continue-on-error: false
        with:
          name: mechwild-keymaps
          path: |
            */mechwild_${{ steps.vars.outputs.keyboard-filename }}_${{ matrix.keymap }}.hex
            */mechwild_${{ steps.vars.outputs.keyboard-filename }}_${{ matrix.keymap }}.bin
            */mechwild_${{ steps.vars.outputs.keyboard-filename }}_${{ matrix.keymap }}.uf2
      - name: Clean .build folders
        run: |
          [ -d qmk_firmware ] && make -C qmk_firmware clean
          [ -d vial-qmk ] && make -C vial-qmk clean

